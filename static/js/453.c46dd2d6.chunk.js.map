{"version":3,"file":"static/js/453.c46dd2d6.chunk.js","mappings":"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","sources":["service/RequestAPI.ts","Components/ListStates/ListState.tsx","Components/State.tsx","Components/Router.tsx"],"sourcesContent":["import axios from 'axios';\n\nconst RequestAPI =\n    'https://servicodados.ibge.gov.br/api/v1/localidades/estados';\n\nconst RequestService = (\n    fn: any,\n    api: string = RequestAPI\n) => {\n    axios\n        .get(api)\n        .then(fn)\n        .catch(e => {\n            throw new Error(e);\n        });\n};\n\nexport { RequestAPI, RequestService };\n","import React, { Suspense, lazy } from 'react';\nimport { RequestService } from '../../service/RequestAPI';\nimport { Loading, Warning } from '../Feedback';\n\nconst Cards = lazy(() => import('../Cards'));\nconst Search = lazy(() => import('../Search'));\nconst RenderResult = lazy(() => import('../Render'));\n\ninterface ListStateProps {\n    dataList: string[];\n}\ninterface MyState {\n    amount: any | any[];\n}\n\nclass ListState extends React.Component<\n    ListStateProps,\n    MyState\n> {\n    dataList: JSX.Element[];\n    constructor(props: any) {\n        super(props);\n        this.searchAction = this.searchAction.bind(this);\n        this.dataList = [];\n        this.state = { amount: <Loading /> };\n    }\n\n    componentDidMount() {\n        RequestService((res: any) => {\n            res.data.sort((a: any, b: any) =>\n                a.nome < b.nome\n                    ? -1\n                    : a.nome > b.nome\n                    ? 1\n                    : 0\n            );\n            res.data.forEach((el: any, idx: number) => {\n                this.dataList.push(\n                    <Cards\n                        key={idx}\n                        nome={el.nome}\n                        sigla={el.sigla}\n                        regiao={el.regiao.nome}\n                        link={() => el}\n                    />\n                );\n            });\n            this.setState({ amount: this.dataList });\n        });\n    }\n\n    searchAction(e: any) {\n        RequestService((list: any) => {\n            this.dataList = [];\n            list.data = list.data.filter(\n                (el: any) =>\n                    el.nome\n                        .toLowerCase()\n                        .indexOf(\n                            e.target.value.toLowerCase()\n                        ) !== -1\n            );\n            list.data.sort((a: any, b: any) =>\n                a.nome < b.nome\n                    ? -1\n                    : a.nome > b.nome\n                    ? 1\n                    : 0\n            );\n\n            list.data.forEach((el: any, idx: number) => {\n                let dataMount = (\n                    <Cards\n                        key={idx}\n                        nome={el.nome}\n                        sigla={el.sigla}\n                        regiao={el.regiao.nome}\n                        link={() => el}\n                    />\n                );\n                this.dataList.push(dataMount);\n            });\n\n            this.setState({ amount: this.dataList });\n        });\n    }\n    render() {\n        const mount =\n            this.state.amount.length <= 0 ? (\n                <Warning />\n            ) : (\n                this.state.amount\n            );\n\n        return (\n            <Suspense fallback={<Loading />}>\n                <>\n                    <h1\n                        className=\"py-3\"\n                        data-testid=\"title-list-state\"\n                    >\n                        Estados do Brasil\n                    </h1>\n                    <Search search={this.searchAction} />\n                    <RenderResult>{mount}</RenderResult>\n                </>\n            </Suspense>\n        );\n    }\n}\n\nexport { ListState };\n","import React, { lazy, useEffect, useState } from 'react';\n\nimport { Link, useParams } from 'react-router-dom';\n\nimport { Loading } from './Feedback';\nconst City = lazy(() => import('./City'));\n\nimport {\n    RequestAPI,\n    RequestService,\n} from '../service/RequestAPI';\n\nconst State = () => {\n    const [dataState, setDataStates] = useState<null>(null);\n    const dataList: any = [];\n\n    const { estado } = useParams();\n\n    useEffect(() => {\n        RequestService((res: any) => {\n            res.data.forEach((el: any, idx: number) =>\n                dataList.push(\n                    <City\n                        key={idx}\n                        nome={el.nome}\n                        mesorregiao={el.microrregiao.nome}\n                    />\n                )\n            );\n            setDataStates(dataList);\n        }, `${RequestAPI}/${estado}/municipios`);\n    }, [estado]);\n\n    return (\n        <>\n            <h1 className=\"mt-3\">\n                Munc√≠pios do {estado?.toUpperCase()}\n            </h1>\n            <Link to=\"/\" className=\"btn btn-link mb-3\">\n                &laquo;&nbsp;Voltar para os estados\n            </Link>\n            {dataState || <Loading />}\n        </>\n    );\n};\n\nexport default State;\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport ListState from './ListStates';\nimport State from './State';\n\nconst Router = () => {\n    return (\n        <Routes>\n            <Route\n                path=\"/\"\n                element={<ListState dataList={[]} />}\n            />\n            <Route\n                path=\"/estado/:estado\"\n                element={<State />}\n            />\n        </Routes>\n    );\n};\n\nexport { Router as default };\n"],"names":["RequestAPI","RequestService","fn","api","axios","then","catch","e","Error","Cards","lazy","Search","RenderResult","ListState","props","dataList","searchAction","bind","state","amount","res","data","sort","a","b","nome","forEach","el","idx","push","sigla","regiao","link","setState","list","filter","toLowerCase","indexOf","target","value","dataMount","mount","this","length","Suspense","fallback","className","search","React","City","useState","dataState","setDataStates","estado","useParams","useEffect","mesorregiao","microrregiao","toUpperCase","to","Router","path","element"],"sourceRoot":""}