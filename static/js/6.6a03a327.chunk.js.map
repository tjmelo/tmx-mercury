{"version":3,"sources":["service/RequestAPI.ts","Components/State.tsx"],"names":["RequestAPI","RequestService","fn","api","axios","get","then","catch","e","Error","City","lazy","State","props","estado","dataList","param","match","params","state","datas","res","data","forEach","el","idx","push","nome","mesorregiao","microrregiao","setState","this","className","toUpperCase","to","React","Component"],"mappings":"iHAAA,yFAEMA,EACF,8DAEEC,EAAiB,SACnBC,GAEE,IADFC,EACC,uDADaH,EAEdI,IACKC,IAAIF,GACJG,KAAKJ,GACLK,OAAM,SAAAC,GACH,MAAM,IAAIC,MAAMD,Q,0HCJtBE,EAAOC,gBAAK,kBAAM,gCAgBlBC,E,kDAUF,WAAYC,GAAa,IAAD,8BACpB,cAAMA,IAPVC,YAMwB,IALxBC,cAKwB,IAJxBC,WAIwB,EAEpB,EAAKA,MAAQ,EAAKH,MAClB,EAAKC,OAAS,EAAKE,MAAMC,MAAMC,OAAOJ,OACtC,EAAKK,MAAQ,CAAEC,MAAO,cAAC,IAAD,KACtB,EAAKL,SAAW,GALI,E,qDAQxB,WAAqB,IAAD,OAChBd,aAAe,SAACoB,GACZA,EAAIC,KAAKC,SAAQ,SAACC,EAASC,GAAV,OACb,EAAKV,SAASW,KACV,cAAChB,EAAD,CAEIiB,KAAMH,EAAGG,KACTC,YAAaJ,EAAGK,aAAaF,MAFxBF,OAMjB,EAAKK,SAAS,CAAEV,MAAO,EAAKL,aAVlB,UAWRf,IAXQ,YAWM+B,KAAKjB,OAXX,kB,oBAclB,WACI,OACI,qCACI,qBAAIkB,UAAU,OAAd,6BACkBD,KAAKjB,OAAOmB,iBAE9B,cAAC,IAAD,CAAMC,GAAG,IAAIF,UAAU,oBAAvB,4CAIA,kCAAUD,KAAKZ,MAAMC,e,GA3CjBe,IAAMC,WAqDXxB","file":"static/js/6.6a03a327.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst RequestAPI =\n    'https://servicodados.ibge.gov.br/api/v1/localidades/estados';\n\nconst RequestService = (\n    fn: any,\n    api: string = RequestAPI\n) => {\n    axios\n        .get(api)\n        .then(fn)\n        .catch(e => {\n            throw new Error(e);\n        });\n};\n\nexport { RequestAPI, RequestService };\n","import React, { lazy } from 'react';\n\nimport {\n    Link,\n    RouteComponentProps,\n} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Loading } from './Feedback';\nconst City = lazy(() => import('./City'));\n\nimport {\n    RequestAPI,\n    RequestService,\n} from '../service/RequestAPI';\n\ninterface MyProps {\n    datas: JSX.Element[];\n    estado: string | React.ReactNode;\n}\n\ninterface MyState {\n    datas: JSX.Element | JSX.Element[];\n}\n\nclass State extends React.Component<\n    MyProps & RouteComponentProps,\n    MyState\n> {\n    estado: string | any;\n    dataList: JSX.Element[];\n    param: any;\n    static propTypes: {\n        match: PropTypes.Requireable<string>;\n    };\n    constructor(props: any) {\n        super(props);\n        this.param = this.props;\n        this.estado = this.param.match.params.estado;\n        this.state = { datas: <Loading /> };\n        this.dataList = [];\n    }\n\n    componentDidMount() {\n        RequestService((res: any) => {\n            res.data.forEach((el: any, idx: number) =>\n                this.dataList.push(\n                    <City\n                        key={idx}\n                        nome={el.nome}\n                        mesorregiao={el.microrregiao.nome}\n                    />\n                )\n            );\n            this.setState({ datas: this.dataList });\n        }, `${RequestAPI}/${this.estado}/municipios`);\n    }\n\n    render() {\n        return (\n            <>\n                <h1 className=\"mt-3\">\n                    Munc√≠pios do {this.estado.toUpperCase()}\n                </h1>\n                <Link to=\"/\" className=\"btn btn-link mb-3\">\n                    &laquo;&nbsp;Voltar para os estados\n                </Link>\n\n                <section>{this.state.datas}</section>\n            </>\n        );\n    }\n}\n\nState.propTypes = {\n    match: PropTypes.string,\n};\n\nexport default State;\n"],"sourceRoot":""}