{"version":3,"file":"static/js/453.c34d3660.chunk.js","mappings":"4NAEMA,E,MAAcC,GAAAA,OAAa,CAC7BC,QACI,uDACJC,QAAS,CAAE,kBAAmB,iB,mBCK5BC,GAAQC,EAAAA,EAAAA,OAAK,kBAAM,qDAAkB,IACrCC,GAASD,EAAAA,EAAAA,OAAK,kBAAM,6BAAmB,IACvCE,GAAeF,EAAAA,EAAAA,OAAK,kBAAM,6BAAmB,IAE7CG,EAAY,WACd,OAAwBC,EAAAA,EAAAA,UAAa,IAAG,eAAjCC,EAAI,KAAEC,EAAO,KACpB,GAAoCF,EAAAA,EAAAA,UAChC,IACH,eAFMG,EAAU,KAAEC,EAAa,KAI1BC,EAAW,SAACC,GAAM,OACpB,SAACX,EAAK,CAEFY,KAAMD,EAAEC,KACRC,MAAOF,EAAEE,MACTC,OAAQH,EAAEG,OAAOF,KACjBG,KAAM,kBAAMJ,CAAC,GAJRA,EAAEK,GAKT,GAGNC,EAAAA,EAAAA,YAAU,YACN,uBAAC,2GAC0BrB,EAAYsB,IAC/B,WACF,KAAD,WAFOZ,EAAI,EAAJA,KAGRC,EAAQD,GACRA,EAAKa,MACD,SACIC,EACAC,GAAmB,OAEnBD,EAAER,KAAOS,EAAET,MACJ,EACDQ,EAAER,KAAOS,EAAET,KACX,EACA,CAAC,IAEfH,EACIH,EAAKgB,KAAI,SAACC,GAAS,OAAKb,EAASa,EAAK,KACxC,0CAlBN,EAoBJ,GAAG,IAcH,OACI,UAAC,EAAAC,SAAQ,CAACC,UAAU,SAAC,IAAO,IAAI,WAC5B,gBACIC,UAAU,OACV,cAAY,mBAAkB,UAE7B,IAAI,oBACa,QAEtB,SAACxB,EAAM,CAACyB,OArBK,SAAChB,GAClB,IAAMiB,EAActB,EAAKuB,QAAO,SAACC,GAC7B,IAAMH,EAAS,IAAII,OAAOpB,EAAEqB,OAAOC,MAAO,MACpCC,EAAQJ,EAAGlB,KACjB,OAAOe,EAAOQ,KAAKD,EACvB,IAEAzB,EACImB,EAAYN,KAAI,SAAAC,GAAI,OAAIb,EAASa,EAAK,IAE9C,KAYQ,SAACpB,EAAY,UACPK,EAAW4B,OAGT5B,GAFA,SAAC,IAAO,QAO5B,E,UC/EM6B,GAAOpC,EAAAA,EAAAA,OAAK,kBAAM,oDAAgB,IAwCxC,EApCc,WACV,OAAmCI,EAAAA,EAAAA,UAAe,MAAK,eAAhDiC,EAAS,KAAEC,EAAa,KACvBC,GAAWC,EAAAA,EAAAA,MAAXD,OAmBR,OAjBAvB,EAAAA,EAAAA,YAAU,YACN,uBAAC,2GAC0BrB,EAAYsB,IAAI,WAAD,OACvBsB,EAAM,gBACnB,KAAD,WAFOlC,EAAI,EAAJA,KAGRiC,EACIjC,EAAKgB,KAAI,SAACC,GAAS,OACf,SAACc,EAAI,CAEDzB,KAAMW,EAAKX,KACX8B,YAAanB,EAAKoB,aAAa/B,MAF1BW,EAAKP,GAGZ,KAER,0CAZN,EAcJ,GAAG,CAACwB,KAGA,iCACI,gBAAId,UAAU,OAAM,UACf,IAAI,mBACe,OAANc,QAAM,IAANA,OAAM,EAANA,EAAQI,cAAe,QAEzC,UAAC,KAAI,CAACC,GAAG,IAAInB,UAAU,oBAAmB,UACrC,IAAI,iCAC+B,OAEvCY,IAAa,SAAC,IAAO,MAGlC,ECtCMQ,EAAS,WACX,OACI,UAAC,KAAM,YACH,SAAC,KAAK,CAACC,KAAK,IAAIC,SAAS,SAAC5C,EAAS,OACnC,SAAC,KAAK,CACF2C,KAAK,kBACLC,SAAS,SAAC,EAAK,QAI/B,C","sources":["service/RequestAPI.ts","Components/ListStates/ListState.tsx","Components/State.tsx","Components/Router.tsx"],"sourcesContent":["import axios from 'axios';\n\nconst instanceAPI = axios.create({\n    baseURL:\n        'https://servicodados.ibge.gov.br/api/v1/localidades/',\n    headers: { 'X-Custom-Header': 'tmx-mercury' },\n});\n\nexport { instanceAPI };\n","import React, {\n    Suspense,\n    lazy,\n    useEffect,\n    useState,\n    SetStateAction,\n} from 'react';\nimport { instanceAPI } from '../../service/RequestAPI';\nimport { Loading, Warning } from '../Feedback';\n\nconst Cards = lazy(() => import('../Cards'));\nconst Search = lazy(() => import('../Search'));\nconst RenderResult = lazy(() => import('../Render'));\n\nconst ListState = () => {\n    const [data, setData] = useState<[]>([]);\n    const [renderData, setRenderData] = useState<[] | any>(\n        []\n    );\n\n    const getCards = (e: any) => (\n        <Cards\n            key={e.id}\n            nome={e.nome}\n            sigla={e.sigla}\n            regiao={e.regiao.nome}\n            link={() => e}\n        />\n    );\n\n    useEffect(() => {\n        (async () => {\n            const { data } = await instanceAPI.get(\n                'estados'\n            );\n            setData(data);\n            data.sort(\n                (\n                    a: { nome: number },\n                    b: { nome: number }\n                ) =>\n                    a.nome < b.nome\n                        ? -1\n                        : a.nome > b.nome\n                        ? 1\n                        : 0\n            );\n            setRenderData(\n                data.map((info: any) => getCards(info))\n            );\n        })();\n    }, []);\n\n    const searchAction = (e: any) => {\n        const searchCards = data.filter((el: any) => {\n            const search = new RegExp(e.target.value, 'gi');\n            const input = el.nome;\n            return search.test(input);\n        });\n\n        setRenderData(\n            searchCards.map(info => getCards(info))\n        );\n    };\n\n    return (\n        <Suspense fallback={<Loading />}>\n            <h1\n                className=\"py-3\"\n                data-testid=\"title-list-state\"\n            >\n                {' '}\n                Estados do Brasil{' '}\n            </h1>\n            <Search search={searchAction} />\n            <RenderResult>\n                {!renderData.length ? (\n                    <Warning />\n                ) : (\n                    renderData\n                )}\n            </RenderResult>\n        </Suspense>\n    );\n};\n\nexport { ListState };\n","import React, { lazy, useEffect, useState } from 'react';\n\nimport { Link, useParams } from 'react-router-dom';\n\nimport { Loading } from './Feedback';\nconst City = lazy(() => import('./City'));\n\nimport { instanceAPI } from '../service/RequestAPI';\n\nconst State = () => {\n    const [dataState, setDataStates] = useState<null>(null);\n    const { estado } = useParams();\n\n    useEffect(() => {\n        (async () => {\n            const { data } = await instanceAPI.get(\n                `estados/${estado}/municipios`\n            );\n            setDataStates(\n                data.map((info: any) => (\n                    <City\n                        key={info.id}\n                        nome={info.nome}\n                        mesorregiao={info.microrregiao.nome}\n                    />\n                ))\n            );\n        })();\n    }, [estado]);\n\n    return (\n        <>\n            <h1 className=\"mt-3\">\n                {' '}\n                Munc√≠pios do {estado?.toUpperCase()}{' '}\n            </h1>\n            <Link to=\"/\" className=\"btn btn-link mb-3\">\n                {' '}\n                &laquo;&nbsp;Voltar para os estados{' '}\n            </Link>\n            {dataState || <Loading />}\n        </>\n    );\n};\n\nexport default State;\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport ListState from './ListStates';\nimport State from './State';\n\nconst Router = () => {\n    return (\n        <Routes>\n            <Route path=\"/\" element={<ListState />} />\n            <Route\n                path=\"/estado/:estado\"\n                element={<State />}\n            />\n        </Routes>\n    );\n};\n\nexport { Router as default };\n"],"names":["instanceAPI","axios","baseURL","headers","Cards","lazy","Search","RenderResult","ListState","useState","data","setData","renderData","setRenderData","getCards","e","nome","sigla","regiao","link","id","useEffect","get","sort","a","b","map","info","Suspense","fallback","className","search","searchCards","filter","el","RegExp","target","value","input","test","length","City","dataState","setDataStates","estado","useParams","mesorregiao","microrregiao","toUpperCase","to","Router","path","element"],"sourceRoot":""}