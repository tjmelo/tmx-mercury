{"version":3,"file":"static/js/830.5b114e2a.chunk.js","mappings":"6IAEA,MAAMA,EAAUA,KAERC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4CAA4CE,KAAK,QAAOD,SAAC,0B,sFCHpF,MAAME,E,MAAcC,GAAAA,OAAa,CAC7BC,QAAS,uDACTC,QAAS,CAAE,kBAAmB,iBCDrBC,EAAWC,IACpB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAa,IASrC,OAPAC,EAAAA,EAAAA,YAAU,KACN,WACI,MAAM,KAAEH,SAAeN,EAAYU,IAAIL,GACvCE,EAAQD,EACX,EAHD,EAGI,GACL,IAEIA,CAAI,E,aCRf,MAAMK,GAAQC,EAAAA,EAAAA,OAAK,IAAM,6BACnBC,GAASD,EAAAA,EAAAA,OAAK,IAAM,+BACpBE,GAAeF,EAAAA,EAAAA,OAAK,IAAM,+BAEnBG,EAAYA,KACrB,MAAMT,EAAOF,EAAQ,YACdY,EAAMC,IAAWT,EAAAA,EAAAA,UAAwB,IAK1CU,EAAYC,IACdvB,EAAAA,EAAAA,KAACe,EAAK,CAAYS,KAAMD,EAAEC,KAAMC,MAAOF,EAAEE,MAAOC,OAAQH,EAAEG,OAAOF,KAAMG,KAAMA,IAAMJ,GAAvEA,EAAEK,IAGlBlB,EAAKmB,MANeC,CAACC,EAAqBC,IAAyBD,EAAEP,KAAOQ,EAAER,MAAQ,EAD1ES,EAACF,EAAqBC,IAAyBD,EAAEP,KAAOQ,EAAER,KAAO,EAAI,EACSS,CAAIF,EAAGC,KAOjG,MAAME,EAAaxB,EAAKyB,KAAKf,GAAgBE,EAASF,MAEtDP,EAAAA,EAAAA,YAAU,IAAMQ,EAAQa,IAAa,CAACxB,IAYtC,OACI0B,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAACC,UAAUtC,EAAAA,EAAAA,KAACD,EAAAA,EAAO,IAAIG,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAO,cAAY,mBAAkBC,SAAC,uBAGpDF,EAAAA,EAAAA,KAACiB,EAAM,CAACsB,OAfMhB,IAClB,MAAMiB,EAAc9B,EAAK+B,QAAQC,IAC7B,MAAMH,EAAS,IAAII,OAAQpB,EAAEqB,OAA4BC,MAAO,MAC1DC,EAAQJ,EAAGlB,KACjB,OAAOe,EAAOQ,KAAKD,EAAM,IAG7B,OAAOzB,EAAQmB,EAAYL,KAAKf,GAAgBE,EAASF,KAAO,KAS5DpB,EAAAA,EAAAA,KAACkB,EAAY,CAAAhB,SAAO,OAAJkB,QAAI,IAAJA,GAAAA,EAAM4B,OAAuB5B,GAAdpB,EAAAA,EAAAA,KAACD,EAAAA,EAAO,QAChC,ECrCbkD,GAAOjC,EAAAA,EAAAA,OAAK,IAAM,+BAKlBkC,EAAQA,KACV,MAAM,OAAEC,IAAWC,EAAAA,EAAAA,aAGblB,EAFO1B,EAAQ,WAAD6C,OAAYF,EAAM,gBAEdhB,KAAKf,IACzBpB,EAAAA,EAAAA,KAACiD,EAAI,CAAezB,KAAMJ,EAAKI,KAAM8B,YAAalC,EAAKmC,aAAa/B,MAAzDJ,EAAKQ,MAGpB,OACIQ,EAAAA,EAAAA,MAAAoB,EAAAA,SAAA,CAAAtD,SAAA,EACIkC,EAAAA,EAAAA,MAAA,MAAInC,UAAU,OAAMC,SAAA,CAAC,mBAAoB,OAANiD,QAAM,IAANA,OAAM,EAANA,EAAQM,kBAC3CzD,EAAAA,EAAAA,KAAC0D,EAAAA,KAAI,CAACC,GAAG,IAAI1D,UAAU,oBAAmBC,SAAC,2BAGhC,OAAVgC,QAAU,IAAVA,EAAAA,GAAclC,EAAAA,EAAAA,KAACD,EAAAA,EAAO,MACxB,ECpBL6D,EAASA,KAEPxB,EAAAA,EAAAA,MAACyB,EAAAA,OAAM,CAAA3D,SAAA,EACHF,EAAAA,EAAAA,KAAC8D,EAAAA,MAAK,CAACC,KAAK,IAAIC,SAAShE,EAAAA,EAAAA,KAACmB,EAAS,OACnCnB,EAAAA,EAAAA,KAAC8D,EAAAA,MAAK,CAACC,KAAK,kBAAkBC,SAAShE,EAAAA,EAAAA,KAACkD,EAAK,Q","sources":["Components/Feedback/Feedback.tsx","service/RequestAPI.ts","hooks/useData.ts","Components/ListStates/ListState.tsx","Components/State/State.tsx","Components/Router.tsx"],"sourcesContent":["import React from 'react';\n\nconst Loading = (): JSX.Element => {\n    return (\n        <div className=\"container\">\n            <div className=\"my-3 col-xs-12 container alert alert-info\" role=\"alert\">\n                Baixando os dados...\n            </div>\n        </div>\n    );\n};\n\nconst Warning = (): JSX.Element => {\n    return (\n        <div className=\"container\">\n            <div className=\"my-3 col-xs-12 container alert alert-warning\" role=\"alert\">\n                Nenhum dado coincide com a sua busca...\n            </div>\n        </div>\n    );\n};\n\nexport { Loading, Warning };\n","import axios from 'axios';\n\nconst instanceAPI = axios.create({\n    baseURL: 'https://servicodados.ibge.gov.br/api/v1/localidades/',\n    headers: { 'X-Custom-Header': 'tmx-mercury' },\n});\n\nexport { instanceAPI };\n","import { useEffect, useState } from 'react';\nimport { instanceAPI } from '../service/RequestAPI';\n\nexport const useData = (param: string) => {\n    const [data, setData] = useState<[]>([]);\n\n    useEffect(() => {\n        (async () => {\n            const { data } = await instanceAPI.get(param);\n            setData(data);\n        })();\n    }, []);\n\n    return data;\n};\n","import React, { KeyboardEvent, Suspense, lazy, useEffect, useState } from 'react';\nimport { TCard } from '../../types';\nimport { Loading } from '../Feedback/Feedback';\nimport { useData } from '../../hooks';\n\nconst Cards = lazy(() => import('../Cards'));\nconst Search = lazy(() => import('../Search'));\nconst RenderResult = lazy(() => import('../Render'));\n\nexport const ListState = () => {\n    const data = useData('estados');\n    const [info, setInfo] = useState<JSX.Element[]>([]);\n\n    const srt = (a: { nome: number }, b: { nome: number }) => (a.nome > b.nome ? 1 : 0);\n    const getSortData = (a: { nome: number }, b: { nome: number }) => (a.nome < b.nome ? -1 : srt(a, b));\n\n    const getCards = (e: TCard) => (\n        <Cards key={e.id} nome={e.nome} sigla={e.sigla} regiao={e.regiao.nome} link={() => e} />\n    );\n\n    data.sort(getSortData);\n    const renderData = data.map((info: TCard) => getCards(info));\n\n    useEffect(() => setInfo(renderData), [data])\n\n    const searchAction = (e: KeyboardEvent<HTMLInputElement>) => {\n        const searchCards = data.filter((el: { nome: string }) => {\n            const search = new RegExp((e.target as HTMLInputElement).value, 'gi');\n            const input = el.nome;\n            return search.test(input);\n        });\n\n        return setInfo(searchCards.map((info: TCard) => getCards(info)));\n    };\n\n    return (\n        <Suspense fallback={<Loading />}>\n            <h1 className=\"py-3\" data-testid=\"title-list-state\">\n                Estados do Brasil\n            </h1>\n            <Search search={searchAction} />\n            <RenderResult>{!info?.length ? <Loading /> : info}</RenderResult>\n        </Suspense>\n    );\n};\n","import React, { lazy } from 'react';\n\nimport { Link, useParams } from 'react-router-dom';\n\nimport { Loading } from '../Feedback/Feedback';\nconst City = lazy(() => import('../City'));\n\nimport { useData } from '../../hooks';\nimport { InfoData } from '../../types/interfaces';\n\nconst State = () => {\n    const { estado } = useParams();\n    const data = useData(`estados/${estado}/municipios`);\n\n    const renderData = data.map((info: InfoData) => (\n        <City key={info.id} nome={info.nome} mesorregiao={info.microrregiao.nome} />\n    ));\n\n    return (\n        <>\n            <h1 className=\"mt-3\">Munc√≠pios do {estado?.toUpperCase()}</h1>\n            <Link to=\"/\" className=\"btn btn-link mb-3\">\n                Voltar para os estados\n            </Link>\n            {renderData ?? <Loading />}\n        </>\n    );\n};\n\nexport { State };\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport ListState from './ListStates';\nimport { State } from './State';\n\nconst Router = () => {\n    return (\n        <Routes>\n            <Route path=\"/\" element={<ListState />} />\n            <Route path=\"/estado/:estado\" element={<State />} />\n        </Routes>\n    );\n};\n\nexport { Router as default };\n"],"names":["Loading","_jsx","className","children","role","instanceAPI","axios","baseURL","headers","useData","param","data","setData","useState","useEffect","get","Cards","lazy","Search","RenderResult","ListState","info","setInfo","getCards","e","nome","sigla","regiao","link","id","sort","getSortData","a","b","srt","renderData","map","_jsxs","Suspense","fallback","search","searchCards","filter","el","RegExp","target","value","input","test","length","City","State","estado","useParams","concat","mesorregiao","microrregiao","_Fragment","toUpperCase","Link","to","Router","Routes","Route","path","element"],"sourceRoot":""}