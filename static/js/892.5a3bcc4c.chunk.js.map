{"version":3,"file":"static/js/892.5a3bcc4c.chunk.js","mappings":"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","sources":["service/RequestAPI.ts","Components/ListState.tsx","Components/State.tsx","Components/Router.tsx"],"sourcesContent":["import axios from 'axios';\n\nconst RequestAPI =\n    'https://servicodados.ibge.gov.br/api/v1/localidades/estados';\n\nconst RequestService = (\n    fn: any,\n    api: string = RequestAPI\n) => {\n    axios\n        .get(api)\n        .then(fn)\n        .catch(e => {\n            throw new Error(e);\n        });\n};\n\nexport { RequestAPI, RequestService };\n","import React, { Suspense, lazy } from 'react';\nimport { RequestService } from '../service/RequestAPI';\nimport { Loading, Warning } from './Feedback';\nimport axios from 'axios';\n\nconst Cards = lazy(() => import('./Cards'));\nconst Search = lazy(() => import('./Search'));\nconst RenderResult = lazy(() => import('./Render'));\n\ninterface ListStateProps {\n    dataList: string[];\n}\ninterface MyState {\n    amount: any | any[];\n}\n\nclass ListState extends React.Component<\n    ListStateProps,\n    MyState\n> {\n    dataList: JSX.Element[];\n    constructor(props: any) {\n        super(props);\n        this.searchAction = this.searchAction.bind(this);\n        this.dataList = [];\n        this.state = { amount: <Loading /> };\n    }\n\n    componentDidMount() {\n        RequestService((res: any) => {\n            res.data.sort((a: any, b: any) =>\n                a.nome < b.nome\n                    ? -1\n                    : a.nome > b.nome\n                    ? 1\n                    : 0\n            );\n            res.data.forEach((el: any, idx: number) => {\n                this.dataList.push(\n                    <Cards\n                        key={idx}\n                        nome={el.nome}\n                        sigla={el.sigla}\n                        regiao={el.regiao.nome}\n                        link={() => el}\n                    />\n                );\n            });\n            this.setState({ amount: this.dataList });\n        });\n    }\n\n    searchAction(e: any) {\n        RequestService((list: any) => {\n            this.dataList = [];\n            list.data = list.data.filter(\n                (el: any) =>\n                    el.nome\n                        .toLowerCase()\n                        .indexOf(\n                            e.target.value.toLowerCase()\n                        ) !== -1\n            );\n            list.data.sort((a: any, b: any) =>\n                a.nome < b.nome\n                    ? -1\n                    : a.nome > b.nome\n                    ? 1\n                    : 0\n            );\n\n            list.data.forEach((el: any, idx: number) => {\n                let dataMount = (\n                    <Cards\n                        key={idx}\n                        nome={el.nome}\n                        sigla={el.sigla}\n                        regiao={el.regiao.nome}\n                        link={() => el}\n                    />\n                );\n                this.dataList.push(dataMount);\n            });\n\n            this.setState({ amount: this.dataList });\n        });\n    }\n\n    render() {\n        const mount =\n            this.state.amount.length <= 0 ? (\n                <Warning />\n            ) : (\n                this.state.amount\n            );\n        return (\n            <Suspense fallback={<Loading />}>\n                <>\n                    <h1 className=\"py-3\">\n                        Estados do Brasil\n                    </h1>\n                    <Search search={this.searchAction} />\n                    <RenderResult>{mount}</RenderResult>\n                </>\n            </Suspense>\n        );\n    }\n}\n\nexport default ListState;\n","import React, { lazy } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Loading } from './Feedback';\nconst City = lazy(() => import('./City'));\n\nimport {\n    RequestAPI,\n    RequestService,\n} from '../service/RequestAPI';\n\ninterface MyProps {\n    datas: JSX.Element[];\n    estado: string | React.ReactNode;\n}\n\ninterface MyState {\n    datas: JSX.Element | JSX.Element[];\n}\n\nclass State extends React.Component<MyProps, MyState> {\n    estado: string | any;\n    dataList: JSX.Element[];\n    param: any;\n    static propTypes: {\n        match: PropTypes.Requireable<string>;\n    };\n    constructor(props: any) {\n        super(props);\n        this.param = this.props;\n        this.estado = this.param.match.params.estado;\n        this.state = { datas: <Loading /> };\n        this.dataList = [];\n    }\n\n    componentDidMount() {\n        RequestService((res: any) => {\n            res.data.forEach((el: any, idx: number) =>\n                this.dataList.push(\n                    <City\n                        key={idx}\n                        nome={el.nome}\n                        mesorregiao={el.microrregiao.nome}\n                    />\n                )\n            );\n            this.setState({ datas: this.dataList });\n        }, `${RequestAPI}/${this.estado}/municipios`);\n    }\n\n    render() {\n        return (\n            <>\n                <h1 className=\"mt-3\">\n                    Munc√≠pios do {this.estado.toUpperCase()}\n                </h1>\n                <Link to=\"/\" className=\"btn btn-link mb-3\">\n                    &laquo;&nbsp;Voltar para os estados\n                </Link>\n\n                <section>{this.state.datas}</section>\n            </>\n        );\n    }\n}\n\nState.propTypes = {\n    match: PropTypes.string,\n};\n\nexport default State;\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport ListState from './ListState';\nimport State from './State';\n\nconst Router = () => {\n    return (\n        <Routes>\n            <Route\n                path=\"/\"\n                element={<ListState dataList={[]} />}\n            />\n            <Route\n                path=\"/estado/:estado\"\n                element={\n                    <State datas={[]} estado={undefined} />\n                }\n            />\n        </Routes>\n    );\n};\n\nexport { Router as default };\n"],"names":["RequestAPI","RequestService","fn","api","axios","then","catch","e","Error","Cards","lazy","Search","RenderResult","ListState","props","dataList","searchAction","bind","state","amount","res","data","sort","a","b","nome","forEach","el","idx","push","sigla","regiao","link","setState","list","filter","toLowerCase","indexOf","target","value","dataMount","mount","this","length","Suspense","fallback","className","search","React","City","State","estado","param","match","params","datas","mesorregiao","microrregiao","toUpperCase","to","Router","path","element","undefined"],"sourceRoot":""}