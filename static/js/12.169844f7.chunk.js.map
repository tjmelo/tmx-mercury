{"version":3,"file":"static/js/12.169844f7.chunk.js","mappings":"2NAEMA,E,MAAcC,GAAAA,OAAa,CAC7BC,QAAS,uDACTC,QAAS,CAAE,kBAAmB,iB,mBCC5BC,GAAQC,EAAAA,EAAAA,OAAK,kBAAM,qDAAkB,IACrCC,GAASD,EAAAA,EAAAA,OAAK,kBAAM,6BAAmB,IACvCE,GAAeF,EAAAA,EAAAA,OAAK,kBAAM,6BAAmB,IAE7CG,EAAY,WACd,OAAwBC,EAAAA,EAAAA,UAAa,IAAG,eAAjCC,EAAI,KAAEC,EAAO,KACpB,GAAoCF,EAAAA,EAAAA,UAAmB,IAAG,eAAnDG,EAAU,KAAEC,EAAa,KAE1BC,EAAW,SAACC,GAAQ,OACtB,SAACX,EAAK,CAAYY,KAAMD,EAAEC,KAAMC,MAAOF,EAAEE,MAAOC,OAAQH,EAAEG,OAAOF,KAAMG,KAAM,kBAAMJ,CAAC,GAAxEA,EAAEK,GAA0E,GAG5FC,EAAAA,EAAAA,YAAU,YACN,uBAAC,2GAC0BrB,EAAYsB,IAAI,WAAW,KAAD,WAAzCZ,EAAI,EAAJA,KACRC,EAAQD,GACRA,EAAKa,MAAK,SAACC,EAAqBC,GAAmB,OAAMD,EAAER,KAAOS,EAAET,MAAQ,EAAIQ,EAAER,KAAOS,EAAET,KAAO,EAAI,CAAC,IACvGH,EAAcH,EAAKgB,KAAI,SAACC,GAAW,OAAKb,EAASa,EAAK,KAAG,0CAJ7D,EAMJ,GAAG,IAYH,OACI,UAAC,EAAAC,SAAQ,CAACC,UAAU,SAAC,IAAO,IAAI,WAC5B,gBAAIC,UAAU,OAAO,cAAY,mBAAkB,UAC9C,IAAI,oBACa,QAEtB,SAACxB,EAAM,CAACyB,OAhBK,SAAChB,GAClB,IAAMiB,EAActB,EAAKuB,QAAO,SAACC,GAC7B,IAAMH,EAAS,IAAII,OAAOpB,EAAEqB,OAAOC,MAAO,MACpCC,EAAQJ,EAAGlB,KACjB,OAAOe,EAAOQ,KAAKD,EACvB,IAEAzB,EAAcmB,EAAYN,KAAI,SAACC,GAAW,OAAKb,EAASa,EAAK,IACjE,KASQ,SAACpB,EAAY,UAAGK,EAAW4B,OAAuB5B,GAAd,SAAC,IAAO,QAGxD,E,UCzCM6B,GAAOpC,EAAAA,EAAAA,OAAK,kBAAM,4BAAiB,IAInCqC,EAAQ,WACV,OAAmCjC,EAAAA,EAAAA,UAAe,MAAK,eAAhDkC,EAAS,KAAEC,EAAa,KACvBC,GAAWC,EAAAA,EAAAA,MAAXD,OAWR,OATAxB,EAAAA,EAAAA,YAAU,YACN,uBAAC,2GAC0BrB,EAAYsB,IAAI,WAAD,OAAYuB,EAAM,gBAAe,KAAD,WAA9DnC,EAAI,EAAJA,KACRkC,EACIlC,EAAKgB,KAAI,SAACC,GAAS,OAAK,SAACc,EAAI,CAAezB,KAAMW,EAAKX,KAAM+B,YAAapB,EAAKqB,aAAahC,MAAzDW,EAAKP,GAA4D,KACtG,0CAJN,EAMJ,GAAG,CAACyB,KAGA,iCACI,gBAAIf,UAAU,OAAM,UAAC,mBAAoB,OAANe,QAAM,IAANA,OAAM,EAANA,EAAQI,kBAC3C,SAAC,KAAI,CAACC,GAAG,IAAIpB,UAAU,oBAAmB,SAAC,2BAG1Ca,IAAa,SAAC,IAAO,MAGlC,EC1BMQ,EAAS,WACX,OACI,UAAC,KAAM,YACH,SAAC,KAAK,CAACC,KAAK,IAAIC,SAAS,SAAC7C,EAAS,OACnC,SAAC,KAAK,CAAC4C,KAAK,kBAAkBC,SAAS,SAACX,EAAK,QAGzD,C","sources":["service/RequestAPI.ts","Components/ListStates/ListState.tsx","Components/State/State.tsx","Components/Router.tsx"],"sourcesContent":["import axios from 'axios';\n\nconst instanceAPI = axios.create({\n    baseURL: 'https://servicodados.ibge.gov.br/api/v1/localidades/',\n    headers: { 'X-Custom-Header': 'tmx-mercury' },\n});\n\nexport { instanceAPI };\n","import React, { Suspense, lazy, useEffect, useState } from 'react';\nimport { instanceAPI } from '../../service/RequestAPI';\nimport { TCard } from '../../types';\nimport { Loading, Warning } from '../Feedback/Feedback';\n\nconst Cards = lazy(() => import('../Cards'));\nconst Search = lazy(() => import('../Search'));\nconst RenderResult = lazy(() => import('../Render'));\n\nconst ListState = () => {\n    const [data, setData] = useState<[]>([]);\n    const [renderData, setRenderData] = useState<[] | any>([]);\n\n    const getCards = (e: TCard) => (\n        <Cards key={e.id} nome={e.nome} sigla={e.sigla} regiao={e.regiao.nome} link={() => e} />\n    );\n\n    useEffect(() => {\n        (async () => {\n            const { data } = await instanceAPI.get('estados');\n            setData(data);\n            data.sort((a: { nome: number }, b: { nome: number }) => (a.nome < b.nome ? -1 : a.nome > b.nome ? 1 : 0));\n            setRenderData(data.map((info: TCard) => getCards(info)));\n        })();\n    }, []);\n\n    const searchAction = (e: any) => {\n        const searchCards = data.filter((el: any) => {\n            const search = new RegExp(e.target.value, 'gi');\n            const input = el.nome;\n            return search.test(input);\n        });\n\n        setRenderData(searchCards.map((info: TCard) => getCards(info)));\n    };\n\n    return (\n        <Suspense fallback={<Loading />}>\n            <h1 className=\"py-3\" data-testid=\"title-list-state\">\n                {' '}\n                Estados do Brasil{' '}\n            </h1>\n            <Search search={searchAction} />\n            <RenderResult>{!renderData.length ? <Warning /> : renderData}</RenderResult>\n        </Suspense>\n    );\n};\n\nexport { ListState };\n","import React, { lazy, useEffect, useState } from 'react';\n\nimport { Link, useParams } from 'react-router-dom';\n\nimport { Loading } from '../Feedback/Feedback';\nconst City = lazy(() => import('../City'));\n\nimport { instanceAPI } from '../../service/RequestAPI';\n\nconst State = () => {\n    const [dataState, setDataStates] = useState<null>(null);\n    const { estado } = useParams();\n\n    useEffect(() => {\n        (async () => {\n            const { data } = await instanceAPI.get(`estados/${estado}/municipios`);\n            setDataStates(\n                data.map((info: any) => <City key={info.id} nome={info.nome} mesorregiao={info.microrregiao.nome} />)\n            );\n        })();\n    }, [estado]);\n\n    return (\n        <>\n            <h1 className=\"mt-3\">Munc√≠pios do {estado?.toUpperCase()}</h1>\n            <Link to=\"/\" className=\"btn btn-link mb-3\">\n                Voltar para os estados\n            </Link>\n            {dataState || <Loading />}\n        </>\n    );\n};\n\nexport { State };\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport ListState from './ListStates';\nimport { State } from './State/State';\n\nconst Router = () => {\n    return (\n        <Routes>\n            <Route path=\"/\" element={<ListState />} />\n            <Route path=\"/estado/:estado\" element={<State />} />\n        </Routes>\n    );\n};\n\nexport { Router as default };\n"],"names":["instanceAPI","axios","baseURL","headers","Cards","lazy","Search","RenderResult","ListState","useState","data","setData","renderData","setRenderData","getCards","e","nome","sigla","regiao","link","id","useEffect","get","sort","a","b","map","info","Suspense","fallback","className","search","searchCards","filter","el","RegExp","target","value","input","test","length","City","State","dataState","setDataStates","estado","useParams","mesorregiao","microrregiao","toUpperCase","to","Router","path","element"],"sourceRoot":""}