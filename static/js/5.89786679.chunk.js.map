{"version":3,"sources":["service/RequestAPI.ts","Components/ListState.tsx"],"names":["RequestAPI","RequestService","fn","api","axios","get","then","catch","e","Error","Cards","lazy","Search","RenderResult","ListState","props","dataList","searchAction","bind","state","amount","res","data","sort","a","b","nome","forEach","el","idx","push","sigla","regiao","link","setState","list","filter","toLowerCase","indexOf","target","value","dataMount","mount","this","length","fallback","className","search","React","Component"],"mappings":"iHAAA,yFAEMA,EACF,8DAEEC,EAAiB,SACnBC,GAEE,IADFC,EACC,uDADaH,EAEdI,IACKC,IAAIF,GACJG,KAAKJ,GACLK,OAAM,SAAAC,GACH,MAAM,IAAIC,MAAMD,Q,0HCRtBE,EAAQC,gBAAK,kBAAM,uDACnBC,EAASD,gBAAK,kBAAM,iCACpBE,EAAeF,gBAAK,kBAAM,gCAS1BG,E,kDAKF,WAAYC,GAAa,IAAD,8BACpB,cAAMA,IAFVC,cACwB,EAEpB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKF,SAAW,GAChB,EAAKG,MAAQ,CAAEC,OAAQ,cAAC,IAAD,KAJH,E,qDAOxB,WAAqB,IAAD,OAChBnB,aAAe,SAACoB,GACZA,EAAIC,KAAKC,MAAK,SAACC,EAAQC,GAAT,OACVD,EAAEE,KAAOD,EAAEC,MACJ,EACDF,EAAEE,KAAOD,EAAEC,KACX,EACA,KAEVL,EAAIC,KAAKK,SAAQ,SAACC,EAASC,GACvB,EAAKb,SAASc,KACV,cAACpB,EAAD,CAEIgB,KAAME,EAAGF,KACTK,MAAOH,EAAGG,MACVC,OAAQJ,EAAGI,OAAON,KAClBO,KAAM,kBAAML,IAJPC,OAQjB,EAAKK,SAAS,CAAEd,OAAQ,EAAKJ,gB,0BAIrC,SAAaR,GAAS,IAAD,OACjBP,aAAe,SAACkC,GACZ,EAAKnB,SAAW,GAChBmB,EAAKb,KAAOa,EAAKb,KAAKc,QAClB,SAACR,GAAD,OAKe,IAJXA,EAAGF,KACEW,cACAC,QACG9B,EAAE+B,OAAOC,MAAMH,kBAG/BF,EAAKb,KAAKC,MAAK,SAACC,EAAQC,GAAT,OACXD,EAAEE,KAAOD,EAAEC,MACJ,EACDF,EAAEE,KAAOD,EAAEC,KACX,EACA,KAGVS,EAAKb,KAAKK,SAAQ,SAACC,EAASC,GACxB,IAAIY,EACA,cAAC/B,EAAD,CAEIgB,KAAME,EAAGF,KACTK,MAAOH,EAAGG,MACVC,OAAQJ,EAAGI,OAAON,KAClBO,KAAM,kBAAML,IAJPC,GAOb,EAAKb,SAASc,KAAKW,MAGvB,EAAKP,SAAS,CAAEd,OAAQ,EAAKJ,gB,oBAIrC,WACI,IAAM0B,EACFC,KAAKxB,MAAMC,OAAOwB,QAAU,EACxB,cAAC,IAAD,IAEAD,KAAKxB,MAAMC,OAEnB,OACI,cAAC,WAAD,CAAUyB,SAAU,cAAC,IAAD,IAApB,SACI,qCACI,oBAAIC,UAAU,OAAd,+BAGA,cAAClC,EAAD,CAAQmC,OAAQJ,KAAK1B,eACrB,cAACJ,EAAD,UAAe6B,a,GAtFXM,IAAMC,WA6FfnC","file":"static/js/5.89786679.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst RequestAPI =\n    'https://servicodados.ibge.gov.br/api/v1/localidades/estados';\n\nconst RequestService = (\n    fn: any,\n    api: string = RequestAPI\n) => {\n    axios\n        .get(api)\n        .then(fn)\n        .catch(e => {\n            throw new Error(e);\n        });\n};\n\nexport { RequestAPI, RequestService };\n","import React, { Suspense, lazy } from 'react';\nimport { RequestService } from '../service/RequestAPI';\nimport { Loading, Warning } from './Feedback';\nimport axios from 'axios';\n\nconst Cards = lazy(() => import('./Cards'));\nconst Search = lazy(() => import('./Search'));\nconst RenderResult = lazy(() => import('./Render'));\n\ninterface ListStateProps {\n    dataList: string[];\n}\ninterface MyState {\n    amount: any | any[];\n}\n\nclass ListState extends React.Component<\n    ListStateProps,\n    MyState\n> {\n    dataList: JSX.Element[];\n    constructor(props: any) {\n        super(props);\n        this.searchAction = this.searchAction.bind(this);\n        this.dataList = [];\n        this.state = { amount: <Loading /> };\n    }\n\n    componentDidMount() {\n        RequestService((res: any) => {\n            res.data.sort((a: any, b: any) =>\n                a.nome < b.nome\n                    ? -1\n                    : a.nome > b.nome\n                    ? 1\n                    : 0\n            );\n            res.data.forEach((el: any, idx: number) => {\n                this.dataList.push(\n                    <Cards\n                        key={idx}\n                        nome={el.nome}\n                        sigla={el.sigla}\n                        regiao={el.regiao.nome}\n                        link={() => el}\n                    />\n                );\n            });\n            this.setState({ amount: this.dataList });\n        });\n    }\n\n    searchAction(e: any) {\n        RequestService((list: any) => {\n            this.dataList = [];\n            list.data = list.data.filter(\n                (el: any) =>\n                    el.nome\n                        .toLowerCase()\n                        .indexOf(\n                            e.target.value.toLowerCase()\n                        ) !== -1\n            );\n            list.data.sort((a: any, b: any) =>\n                a.nome < b.nome\n                    ? -1\n                    : a.nome > b.nome\n                    ? 1\n                    : 0\n            );\n\n            list.data.forEach((el: any, idx: number) => {\n                let dataMount = (\n                    <Cards\n                        key={idx}\n                        nome={el.nome}\n                        sigla={el.sigla}\n                        regiao={el.regiao.nome}\n                        link={() => el}\n                    />\n                );\n                this.dataList.push(dataMount);\n            });\n\n            this.setState({ amount: this.dataList });\n        });\n    }\n\n    render() {\n        const mount =\n            this.state.amount.length <= 0 ? (\n                <Warning />\n            ) : (\n                this.state.amount\n            );\n        return (\n            <Suspense fallback={<Loading />}>\n                <>\n                    <h1 className=\"py-3\">\n                        Estados do Brasil\n                    </h1>\n                    <Search search={this.searchAction} />\n                    <RenderResult>{mount}</RenderResult>\n                </>\n            </Suspense>\n        );\n    }\n}\n\nexport default ListState;\n"],"sourceRoot":""}